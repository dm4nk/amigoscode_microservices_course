type Customer {
    id: ID
    firstName: String
    lastName: String
    email: String
    createdAt: String
    isBanned: Boolean
    notes: [NotePreview]
}

input CustomerInput {
    id: ID!
    firstName: String
    lastName: String
    email: String
    ban: Boolean
    banFoDays: Int
    banUntil: String
}

input NoteInput{
    id: ID
    caption: String
    text: String
}

type Note {
    id: ID
    caption: String
    text: String
}

type NotePreview {
    id: ID
    caption: String
}

type Mutation {
    createCustomer(firstName: String!, lastName: String!, email: String!): Customer!
    mutateCustomer(customerInput: CustomerInput!): Customer!
    mutateNote(noteInput: NoteInput!): Note!
}

type Query {
    getCustomerById(id: ID): Customer
    getCustomers: [Customer]
    getNote(id: ID): Note
}

